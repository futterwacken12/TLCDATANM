@model CHS.TLC.Data.NM.Web.Areas.Intranet.ViewModels.Master.ListTypeExistenceViewModel
@{
    ViewBag.Title = "Lista de Tipos de Existencia";
    ViewBag.PageIcon = "bar-chart";
}

<div class="row-fluid">
    <div class="span12 box bordered-box blue-border">
        <div class="box-header green-background">
            <div class="title">
                <i class="icon-filter"></i>
                Filtros
            </div>
        </div>
        <div class="box-content box-double-padding">
            <form class="form" style="margin-bottom: 0;">
                <fieldset>
                    <div class="span6">
                        <strong>Descripción</strong>
                        @Html.TextBoxFor(x => x.Description, new { @class = "span12" })
                    </div>
                </fieldset>

                <hr class="hr-normal">

                <div class="form-actions" style="margin-bottom: 0;">
                    <div class="text-right">
                        <a class="btn btn-primary"><i class="icon-filter"></i> Filtrar</a>
                        <a href="@Url.Action("ListTypeExistence", "Master")" class="btn btn-default"><i class="icon-eraser"></i> Limpiar</a>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

<hr />

<div class="row-fluid">
    <div class="col-lg-12" style="padding-bottom: 4%">
        <div class="pull-left">
            @Html.EncodedActionLink(Html.Raw("<i class='icon icon-plus'></i> Nuevo Tipo de Existencia"), "AddEditTypeExistence", "Master", "Intranet", new { }, new { @class = "'btn btn-primary'" })
        </div>
    </div>
</div>

<div class='row-fluid'>
    <div class='span12 box bordered-box red-border' style='margin-bottom:0;'>
        <div class='box-header green-background'>
            <div class='title'><i class="icon icon-reorder"></i> Resultados</div>
        </div>
        <div class='box-content box-no-padding'>
            <div class='responsive-table'>
                <div class='scrollable-area'>
                    <table class='table table-hover table-striped' style='margin-bottom:0;'>
                        <thead>
                            <tr>
                                <th>
                                    Descripción
                                </th>
                                <th>
                                    Estado
                                </th>
                                <th>
                                    Opciones
                                </th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var typeExistence in Model.LstTypeExistence)
                            {
                                <tr>
                                    <td>@typeExistence.Description</td>
                                    <td>
                                        @Html.Raw(ConstantHelpers.ESTADO.GetLabelEstado(typeExistence.State))
                                    </td>
                                    <td>
                                        <div class='btn-group' style='margin-bottom:5px'>
                                            @Html.EncodedActionLink(Html.Raw("<i class='icon icon-edit'></i> Editar"), "AddEditTypeExistence", "Master", "Intranet", new { TypeExistenceId = typeExistence.TypeExistenceId }, new { @class = "'btn'" })
                                            <button class='btn dropdown-toggle' data-toggle='dropdown'>
                                                <span class='caret'></span>
                                            </button>
                                            <ul class='dropdown-menu'>
                                                <li>
                                                    @Html.EncodedActionLinkModal(Html.Raw("<i class='icon icon-trash'></i> Eliminar"), "_DeleteTypeExistence", "Master", "Intranet", new { TypeExistenceId = typeExistence.TypeExistenceId }, new { })
                                                </li>
                                            </ul>
                                        </div>
                                    </td>
                                    <td></td>
                                </tr>
                            }
                            <tr style="visibility:hidden"><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row-fluid">
    <div class="col-lg-12" style="padding-top: 2%">
        <div class="pull-right">
            @Html.PagedListPager(Model.LstTypeExistence, p => Url.Action("ListTypeExistence", new { p = p, Description = Model.Description }), ConstantHelpers.Bootstrap3Pager)
        </div>
    </div>
</div>